# Top-level editorconfig for otp-access-demo
root = true

############################
# Generic text defaults
############################
[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
indent_style = space
indent_size = 4

# YAML / JSON / bicep usually read better with 2 spaces
[*.{yml,yaml,json,bicep}]
indent_size = 2

# Markdown: keep trailing spaces sometimes used for line breaks
[*.md]
trim_trailing_whitespace = false

############################
# C# formatting & style
############################
[*.cs]
# Braces & newlines
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Spacing
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true

# Usings
dotnet_separate_import_directive_groups = true
dotnet_sort_system_directives_first = true
csharp_using_directive_placement = outside_namespace:suggestion

# var preferences
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

# Expression-bodied members (balanced defaults)
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion

# Pattern matching / modern language features
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion

# File-scoped namespaces (optional â€“ set to error if you want to enforce)
csharp_style_namespace_declarations = file_scoped:suggestion

# Nullability
dotnet_style_null_checking = true:suggestion

#################################
# Naming rules (common defaults)
#################################
# Interfaces start with I
dotnet_naming_rule.interfaces_should_start_with_i.severity = warning
dotnet_naming_rule.interfaces_should_start_with_i.symbols = interface_symbols
dotnet_naming_rule.interfaces_should_start_with_i.style = prefix_i

dotnet_naming_symbols.interface_symbols.applicable_kinds = interface
dotnet_naming_style.prefix_i.required_prefix = I
dotnet_naming_style.prefix_i.capitalization = pascal_case

# Private fields: _camelCase
dotnet_naming_rule.private_fields_underscore.severity = warning
dotnet_naming_rule.private_fields_underscore.symbols = private_field_symbols
dotnet_naming_rule.private_fields_underscore.style = underscore_camel

dotnet_naming_symbols.private_field_symbols.applicable_kinds = field
dotnet_naming_symbols.private_field_symbols.applicable_accessibilities = private
dotnet_naming_style.underscore_camel.required_prefix = _
dotnet_naming_style.underscore_camel.capitalization = camel_case

# Constants: PascalCase
dotnet_naming_rule.constants_pascal.severity = suggestion
dotnet_naming_rule.constants_pascal.symbols = const_symbols
dotnet_naming_rule.constants_pascal.style = pascal

dotnet_naming_symbols.const_symbols.applicable_kinds = field
dotnet_naming_symbols.const_symbols.required_modifiers = const
dotnet_naming_style.pascal.capitalization = pascal_case

# Async methods: *Async
dotnet_naming_rule.async_methods_end_with_async.severity = suggestion
dotnet_naming_rule.async_methods_end_with_async.symbols = async_methods
dotnet_naming_rule.async_methods_end_with_async.style = end_async

dotnet_naming_symbols.async_methods.applicable_kinds = method
dotnet_naming_symbols.async_methods.required_modifiers = async
dotnet_naming_style.end_async.required_suffix = Async
dotnet_naming_style.end_async.capitalization = pascal_case

#################################
# Analyzer severities / formatting
#################################
# Make formatting issues fail in CI (matches your pipeline)
dotnet_diagnostic.IDE0055.severity = error   # formatting
dotnet_diagnostic.IDE0005.severity = warning # unnecessary using
dotnet_diagnostic.SA0001.severity = none     # (if StyleCop is not used)

# Default analyzer tone
dotnet_analyzer_diagnostic.category-Style.severity = suggestion
dotnet_analyzer_diagnostic.category-Design.severity = warning
dotnet_analyzer_diagnostic.category-Reliability.severity = warning
dotnet_analyzer_diagnostic.category-Usage.severity = warning
